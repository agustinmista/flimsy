:t gl
val gl = getline
:t getline
:t getline
:e getline
do { getline; getline  } 
do { getline; getline  } 
main
do { putline "x"; putline "y"  } 
do { getline; getline  } 
10
do { getline; getline  } 
do { getline; getline  } 
do { getline; getline  } 
do { getline; getline  } 
putline "foo"
getline 
getline
pi
main
putline "10" 
putline
getline 
return 10
:t return
getline 
getline 
:t getline 
:t main
:t putline "hi"
putline "hi"
putline
getline
:t return 10
return 10
:t return
:info
getline 
:info
putline 
getline 
return 10
:t return 
:t if 5 then 10 else 20 10
:echo if 5 then 10 else 20 10
:echo if 5 then 10 else 20
:t if 5 then 10 else 20
:t if 5 then 10 else 20
:t do { putline "foo"; putline "foo" }
:t do { x <- putline "foo"; putline "foo" }
:t do { x <- putline "foo"; putline x }
:t do { x <- putline "foo"; putline "bar"   }
:t do { putline "foo"  }
:t do { putline "foo"  }
:t do { putline  }
:t do { getline }
:t getline 
:t putline 
:t putline 
:t getline 
:t do { getline; getline }
:t do { getline; getline }
:t do { getline; getline }
:t do { getline }
:t getline 
do { 10 }
do { 10 }
do { 10 }
do { 10  }
do {}
:echo do { foo; x <- bar }
:echo do { foo; bar }
:echo do { foo; bar }
:echo do { foo; bar }
:echo do { foo; bar }
:echo do { foo; bar }
:echo 10 + 20
:echo 10
:reload 
:l lib/test.jm 
:l lib/deps.jm
:l lib/deps.jm lib/test.jm 
:reload 
baz 10 20
:browse lib/test.jm 
:e lib/test.jm 
:e lib/test.jm 
:browse lib/test.jm 
:e lib/test.jm 
:l lib/test.jm 
:e lib/test.jm 
:info 
:load 
:reload <interactive>
:reload 
:info 
prim_eq__ (10,false)
prim_eq__ (10,10)
prim_eq__ (10,20)
:info 
