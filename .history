:t snd
snd
main
:l fl/Do.fl 
:l fl/do.fl 
:l fl/do.fl 
:l fl/do.fl 
:l fl/do.fl 
:e Do.fl 
:info
:reload
main
:browse Do
:l Do
:cd fl
:l Do
:l Do.fl 
:cd fl
:l Do
:l Do.fl 
:l Do
:! ls
:l Do
:l Do.fl 
:cd fl
:l Do.fl 
:l Do.fl 
:l Do.fl 
:info
:browse 
:cd fl
:l Do
:cd fl
:info
:browse Do
:browse do
:browse do.fl 
:l do.fl 
:cd fl
:! ls
:! ls
:! cd fl
:! ls
:cd fl
putLine "foo"
putLine
:info
:! ls
:!ls
:browse Prelude
:l do
:e fl/do.fl 
:l do
:e fl/do.fl 
:l deps
:e fl/deps.fl 
:l deps
ls
:cd fl
:cd fl
:info
:info
:l lib/test.flasdasdasd
:l lib/test.fl 
ls
:! cd lib/
:info
print_io (return 10)
:browse lib/prelude.fl 
:browse 
:echo val foo = 1
:echo foo
take 10 nats
val nats = 0 :: map (fn x => x + 1) nats 
:l lib/deps.fl 
:l lib/deps.fl 
:e lib/deps.fl 
:e lib/deps.fl 
:l lib/deps.fl 
:l lib/wrong.fl 
fib 30
fib 30
fib 20
fib 100
fib 10
:l lib/prelude.fl 
:l lib/do.fl 
foo 10 20
foo
:browse lib/test.fl 
:l lib/test.fl 
:l
:reload
:! cat flimsy.cabal 
:! ls
:t return
:t return
:t retunr
return
fact 10
