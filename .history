print_io (putline "xx")
print_io (putline "aaa")
print_io (putline "xx")
:e lib/prelude.fl 
print_io (putline "xx")
print_io (putline 10)
print_io getline
print_io (putline "aaa")
putline "hhhh"
print_io (putline "aaa")
take 3 [1,2,3,4,5]
putline "hhhh"
print_io (putline "aaa")
getline
putline "hhhh"
take 3 [1,2,3,4,5]
:t print_io getline
putline "xx"
print_io getline
:t print_io getline
print_io getline
putline "xx"
10
10
(putline "xx")
print_io (return 10)
print_io (return 10)
:t print_io
(putline "xx")
print_io (putline "xx")
:e lib/prelude.fl 
:t print_io
print_io (putline "xx")
print_io (getline)
fun print_io io = do { x <- io; print x }
do { putline "xx" }
putline "xx"
:t getline
getline
getline
take 3 ones
val ones = 1 :> ones
take 3 ones
val ones = 1 :> ones
take 3 ones
take 3 ones
val ones = 1 :> ones
take 3 ones
val ones = 1 :> ones
take 10 ones
val ones = 1 :> ones
take 10 ones
val ones = 1 :> ones
take 2 [4,5,6]
take 2 [4,5,6]
take 2 [4,5,6]
take 2 [4,5,6]
take 2 [4,5,6]
if fst (false, true) then 1 else 2
if foo (foo false) then 1 else 2
if foo false then 1 else 2
fun foo x = x
fun foo x = x==x
let foo x = x==x
print_io (return 10)
fun print_io io = do { x <- io; print x }
f 10 + 20
fun f x = x
do { print_io (return 10) } 
print_io (return 10)
print_io (return 10)
fun print_io io = do { x <- io; print x }
print_io (return 10)
print_io 10
fun print_io io = do { x <- io; print x }
:t print_io
fun print_io io = do { x <- io; print x }
:t print_io
fun print_io io = do { x <- io; print x }
print_io (return 10)
fun print_io io = do { x <- io; print x }
print 10
print_io getline
fun print_io io = do { x <- io; print x }
:t foo
foo
fun foo = getline
take 2 [4,5,6]
take 2 [4,5,6]
take 2 [4,5,6]
take 2 [4,5,6]
take 2 [4,5,6]
take 2 [4,5,6]
take 2 [4,5,6]
take 2 [4,5,6]
:thunk x
val x = id 42
id 5
fun id x = x
:thunk ones
